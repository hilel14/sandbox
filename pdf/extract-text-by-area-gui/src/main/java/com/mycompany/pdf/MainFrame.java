package com.mycompany.pdf;

import java.awt.Cursor;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.rendering.ImageType;
import org.apache.pdfbox.rendering.PDFRenderer;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;

/**
 *
 * @author hilel
 */
public class MainFrame extends javax.swing.JFrame {

    static final Logger LOGGER = Logger.getLogger(MainFrame.class.getName());
    static Preferences preferences = Preferences.userNodeForPackage(MainFrame.class);
    final JFileChooser chooser = new JFileChooser();
    File pdfFile;
    BufferedImage image;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        loadPreferences();
        chooser.setFileFilter(new FileNameExtensionFilter("PDF files", "pdf", "PDF"));
    }

    private void loadPreferences() {
        // Main frame size and position
        int x = preferences.getInt("MainFrame.left", 10);
        int y = preferences.getInt("MainFrame.top", 25);
        int w = preferences.getInt("MainFrame.width", 800);
        int h = preferences.getInt("MainFrame.height", 600);
        setBounds(x, y, w, h);
    }

    private void storePreferences() {
        // Main frame size and position
        preferences.putInt("MainFrame.left", getBounds().x);
        preferences.putInt("MainFrame.top", getBounds().y);
        preferences.putInt("MainFrame.width", getBounds().width);
        preferences.putInt("MainFrame.height", getBounds().height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        pdfFileLabel = new javax.swing.JLabel();
        pdfFileText = new javax.swing.JTextField();
        pdfFileButton = new javax.swing.JButton();
        imageLayeredPane = new javax.swing.JLayeredPane();
        areaLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        leftButton = new javax.swing.JButton();
        leftText = new javax.swing.JTextField();
        rightButton = new javax.swing.JButton();
        rightText = new javax.swing.JTextField();
        upButton = new javax.swing.JButton();
        upText = new javax.swing.JTextField();
        downButton = new javax.swing.JButton();
        downText = new javax.swing.JTextField();
        widthButton = new javax.swing.JButton();
        widthText = new javax.swing.JTextField();
        heightButton = new javax.swing.JButton();
        heightText = new javax.swing.JTextField();
        textScroll = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        extractButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PDF Text Marker");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        pdfFileLabel.setText("PDF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        jPanel1.add(pdfFileLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        jPanel1.add(pdfFileText, gridBagConstraints);

        pdfFileButton.setText("Open...");
        pdfFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfFileButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        jPanel1.add(pdfFileButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel1, gridBagConstraints);

        areaLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageLayeredPane.add(areaLabel);
        areaLabel.setBounds(20, 60, 80, 30);

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hilel14.jpg"))); // NOI18N
        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageLabel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                imageLabelComponentResized(evt);
            }
        });
        imageLayeredPane.add(imageLabel);
        imageLabel.setBounds(0, 0, 200, 200);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(imageLayeredPane, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        leftButton.setText("L");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(leftButton, gridBagConstraints);

        leftText.setText("50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(leftText, gridBagConstraints);

        rightButton.setText("R");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(rightButton, gridBagConstraints);

        rightText.setText("50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(rightText, gridBagConstraints);

        upButton.setText("U");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(upButton, gridBagConstraints);

        upText.setText("50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(upText, gridBagConstraints);

        downButton.setText("D");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(downButton, gridBagConstraints);

        downText.setText("50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(downText, gridBagConstraints);

        widthButton.setText("Width");
        widthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                widthButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(widthButton, gridBagConstraints);

        widthText.setText("200");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(widthText, gridBagConstraints);

        heightButton.setText("Height");
        heightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(heightButton, gridBagConstraints);

        heightText.setText("100");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(heightText, gridBagConstraints);

        textArea.setColumns(20);
        textArea.setRows(5);
        textScroll.setViewportView(textArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        jPanel2.add(textScroll, gridBagConstraints);

        extractButton.setText("Extract");
        extractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(extractButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jPanel2, gridBagConstraints);

        statusLabel.setText("Status...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        getContentPane().add(statusLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pdfFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfFileButtonActionPerformed
        showOpenDialog();
    }//GEN-LAST:event_pdfFileButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        storePreferences();
    }//GEN-LAST:event_formWindowClosing

    private void imageLabelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_imageLabelComponentResized
        //imageLabel.getGraphics().drawImage(image, 0, 0, null);
    }//GEN-LAST:event_imageLabelComponentResized

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int offset = Integer.parseInt(downText.getText());
        areaLabel.setBounds(rect.x, rect.y + offset, rect.width, rect.height);
    }//GEN-LAST:event_downButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int offset = Integer.parseInt(upText.getText());
        areaLabel.setBounds(rect.x, rect.y - offset, rect.width, rect.height);
    }//GEN-LAST:event_upButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int offset = Integer.parseInt(rightText.getText());
        areaLabel.setBounds(rect.x + offset, rect.y, rect.width, rect.height);
    }//GEN-LAST:event_rightButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int offset = Integer.parseInt(leftText.getText());
        areaLabel.setBounds(rect.x - offset, rect.y, rect.width, rect.height);
    }//GEN-LAST:event_leftButtonActionPerformed

    private void widthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_widthButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int w = Integer.parseInt(widthText.getText());
        areaLabel.setBounds(rect.x, rect.y, w, rect.height);
    }//GEN-LAST:event_widthButtonActionPerformed

    private void heightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightButtonActionPerformed
        Rectangle rect = areaLabel.getBounds();
        int h = Integer.parseInt(heightText.getText());
        areaLabel.setBounds(rect.x, rect.y, rect.width, h);
    }//GEN-LAST:event_heightButtonActionPerformed

    private void extractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractButtonActionPerformed
        extractTextByArea();
    }//GEN-LAST:event_extractButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel areaLabel;
    private javax.swing.JButton downButton;
    private javax.swing.JTextField downText;
    private javax.swing.JButton extractButton;
    private javax.swing.JButton heightButton;
    private javax.swing.JTextField heightText;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLayeredPane imageLayeredPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton leftButton;
    private javax.swing.JTextField leftText;
    private javax.swing.JButton pdfFileButton;
    private javax.swing.JLabel pdfFileLabel;
    private javax.swing.JTextField pdfFileText;
    private javax.swing.JButton rightButton;
    private javax.swing.JTextField rightText;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextArea textArea;
    private javax.swing.JScrollPane textScroll;
    private javax.swing.JButton upButton;
    private javax.swing.JTextField upText;
    private javax.swing.JButton widthButton;
    private javax.swing.JTextField widthText;
    // End of variables declaration//GEN-END:variables

    private void showOpenDialog() {
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            pdfFile = chooser.getSelectedFile();
            pdfFileText.setText(pdfFile.getAbsolutePath());
            new Worker().execute();
        }
    }

    private void extractTextByArea() {
        try (PDDocument document = PDDocument.load(pdfFile)) {
            PDPage page = document.getPage(0);
            PDFTextStripperByArea stripper = new PDFTextStripperByArea();
            stripper.addRegion("region1", areaLabel.getBounds());
            stripper.extractRegions(page);
            textArea.setText(stripper.getTextForRegion("region1"));
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            statusLabel.setText(ex.toString());
        }
    }

    class Worker extends SwingWorker<Void, Integer> {

        @Override
        protected Void doInBackground() {
            // adjust gui controls
            pdfFileButton.setEnabled(false);
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            statusLabel.setText("Loading PDF file...");
            // render first page of PDF file and display it in image label
            try (PDDocument document = PDDocument.load(pdfFile)) {
                long start = Calendar.getInstance().getTimeInMillis();
                PDFRenderer renderer = new PDFRenderer(document);
                image = renderer.renderImageWithDPI(0, 72, ImageType.RGB);
                //imageLabel.setBackground(new Color(0,0,0,0));
                imageLabel.setBounds(0, 0, image.getWidth(), image.getHeight());
                //imageLabel.getGraphics().drawImage(image, 0, 0, null);
                imageLabel.setIcon(new ImageIcon(image));
                long end = Calendar.getInstance().getTimeInMillis();
                String msg = "Document loaded in " + String.valueOf(end - start) + " milliseconds";
                statusLabel.setText(msg);
                repaint();
            } catch (Exception ex) {
                LOGGER.log(Level.SEVERE, "Error loading PDF file", ex);
                statusLabel.setText(ex.toString());
            }
            // restore gui controls
            pdfFileButton.setEnabled(true);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            // done
            return null;
        }
    }
}
