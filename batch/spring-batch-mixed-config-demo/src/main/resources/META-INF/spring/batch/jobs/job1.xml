<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
		http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        ">
    
    <description>Example job to get you started. It provides a skeleton for a typical batch application.</description>

    <!-- Job setup -->

    <context:property-placeholder location="classpath:mysql.job1.properties" ignore-unresolvable="true" ignore-resource-not-found="false" />

    <context:component-scan base-package="org.my.sandbox"/>
    
    <bean id="job1DataSource" class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${job1.jdbc.driver}"
          p:url="${job1.jdbc.url}"
          p:username="${job1.jdbc.user}"
          p:password="${job1.jdbc.password}"/>
    
    <!-- Job configuration -->
    
    <batch:job id="mixed-config-demo">
        <batch:step id="step1" next="step2">
            <batch:tasklet ref="tasklet1"/>
        </batch:step>
        <batch:step id="step2"  >
            <batch:tasklet transaction-manager="transactionManager" start-limit="100" >
                <batch:chunk reader="reader1" processor="prcessor1" writer="writer1" commit-interval="1" />
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>
