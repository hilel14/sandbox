package beeriprint.newsletter.batch.mailer.tasklets;

import java.util.List;
import org.slf4j.LoggerFactory;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.RowMapperResultSetExtractor;
import org.springframework.jdbc.core.SingleColumnRowMapper;

/**
 *
 * @author hilel
 */
public class RemovedRetriver implements Tasklet {

    private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(RemovedRetriver.class);

    private JdbcTemplate jdbcTemplate;

    @Override
    public RepeatStatus execute(StepContribution stepContribution, ChunkContext chunkContext) throws Exception {
        // get removed emails from database
        String sql
                = "SELECT DISTINCT(CONCAT(user_part, '@', domain_part)) AS email "
                + "FROM activity, email "
                + "WHERE activity_type = 'unsubscribe' "
                + "AND activity.email_id = email.id";
        RowMapper rowMapper = new SingleColumnRowMapper();
        ResultSetExtractor resultSetExtractor = new RowMapperResultSetExtractor(rowMapper);
        List<String> removedRecipients = (List<String>) jdbcTemplate.query(sql, resultSetExtractor);
        LOGGER.info(removedRecipients.size() + " removed recipients found");
        // add removed list to job execution context - to be used later
        ExecutionContext executionContext = chunkContext.getStepContext().getStepExecution().getJobExecution().getExecutionContext();
        executionContext.put("removedRecipients", removedRecipients);
        return RepeatStatus.FINISHED;
    }

    /**
     * @param jdbcTemplate the jdbcTemplate to set
     */
    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

}
